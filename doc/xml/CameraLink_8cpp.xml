<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="CameraLink_8cpp" kind="file" language="C++">
    <compoundname>CameraLink.cpp</compoundname>
    <includes refid="CameraLink_8h" local="yes">CameraLink.h</includes>
    <incdepgraph>
      <node id="547">
        <label>SisoDisplay.h</label>
      </node>
      <node id="543">
        <label>string</label>
      </node>
      <node id="545">
        <label>map</label>
      </node>
      <node id="542">
        <label>memory.h</label>
      </node>
      <node id="544">
        <label>typeinfo</label>
      </node>
      <node id="538">
        <label>Python.h</label>
      </node>
      <node id="539">
        <label>unistd.h</label>
      </node>
      <node id="541">
        <label>iostream</label>
      </node>
      <node id="536">
        <label>/home/essais/Code/crappy_/crappy/sources/Jai_lib/CameraLink.cpp</label>
        <link refid="CameraLink_8cpp"/>
        <childnode refid="537" relation="include">
        </childnode>
      </node>
      <node id="537">
        <label>CameraLink.h</label>
        <link refid="CameraLink_8h_source"/>
        <childnode refid="538" relation="include">
        </childnode>
        <childnode refid="539" relation="include">
        </childnode>
        <childnode refid="540" relation="include">
        </childnode>
        <childnode refid="541" relation="include">
        </childnode>
        <childnode refid="542" relation="include">
        </childnode>
        <childnode refid="543" relation="include">
        </childnode>
        <childnode refid="544" relation="include">
        </childnode>
        <childnode refid="545" relation="include">
        </childnode>
        <childnode refid="546" relation="include">
        </childnode>
        <childnode refid="547" relation="include">
        </childnode>
      </node>
      <node id="546">
        <label>fgrab_prototyp.h</label>
      </node>
      <node id="540">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="24"><highlight class="preprocessor">#include<sp/>&quot;CameraLink.h&quot;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><ref refid="group__capturecam_1gab72d29bf87d08bd6bc892b2820fd417a" kindref="member">CaptureCAM_CL::CaptureCAM_CL</ref>()<sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="33"><highlight class="normal">}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><ref refid="group__capturecam_1ga14053466a32e92a11db0ac810cccb075" kindref="member">CaptureCAM_CL::~CaptureCAM_CL</ref>(){</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__capturecam_1ga0de12aa713d189d122e945956ce18927" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CaptureCAM_CL::init()</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1ab33aa6f1a3c040f04500bad5cb06f7df" kindref="member">isopened</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>last_pic_nr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1ae7ac89be87ecb4da1ae3ca8dbf391f5b" kindref="member">timeout</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>fg=<sp/>NULL;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>=<sp/>PORT_A;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>nrOfPicturesToGrab<sp/><sp/>=<sp/>GRAB_INFINITE;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>nbBuffers=<sp/>4;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>samplePerPixel=<sp/>1;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>bytePerSample=<sp/>1;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>TriggerMode=<sp/>GRABBER_CONTROLLED;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>memHandle<sp/>=NULL;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>serialRefPtr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1ae4cbea3bd517918aca81243658cfe0d9" kindref="member">file</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1ab4bfa7d4e0737be410f9a1bb2ee8a331" kindref="member">width</ref><sp/>=<sp/>640;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1aa2c3b3b877b2be9060509eb74a746fbb" kindref="member">height</ref><sp/>=<sp/>513;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1aec279de1b4bf987a509af1b7b8aa0780" kindref="member">exposure</ref><sp/>=<sp/>8000;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1a2da5179b4ab5cea7cce3500426ddc5fa" kindref="member">xoffset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1a1eb4328834bde84f1837c6033012be0d" kindref="member">yoffset</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1aac6834248bdede33c42d3ef3e3c7ae26" kindref="member">framespersec</ref><sp/>=<sp/>99;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>nId<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">/*void<sp/>CaptureCAM_CL::display(int<sp/>dis){</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/>if(dis==1){</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if(nId==<sp/>0)</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>nId=CreateDisplay(24,640,513);</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>&quot;nId:<sp/>&quot;<sp/>&lt;&lt;<sp/>nId<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>SetBufferWidth(nId,<sp/>640,<sp/>513);</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>DrawBuffer(nId,<sp/>ImgPtr,<sp/>1,<sp/>0);</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/>}else{</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>if(nId!=0){</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>CloseDisplay(nId);</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/>nId=0;</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="comment">}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__capturecam_1ga16b6491e0fe8caae23d169dacc87589e" kindref="member">CaptureCAM_CL::open</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wIndex,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>conffile)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>isSlave<sp/>=0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1a389bd2abcf59cbbc09356897508eec7b" kindref="member">boardNr</ref>=wIndex;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>file=conffile;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;FullLineGray8&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fg<sp/>=<sp/>Fg_InitEx(</highlight><highlight class="stringliteral">&quot;FullAreaGray8&quot;</highlight><highlight class="normal">,<sp/>wIndex,<sp/>isSlave))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>in<sp/>Fg_InitEx:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>Fg_getLastErrorDescription(NULL));</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Fg_loadConfig(fg,conffile)!=FG_OK){</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nFile<sp/>config<sp/>loading<sp/>failed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>ComNr=<ref refid="classCaptureCAM__CL_1a389bd2abcf59cbbc09356897508eec7b" kindref="member">boardNr</ref>*2;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>serialInit(ComNr);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Fg_setParameter(fg,FG_TRIGGERMODE,&amp;TriggerMode,<ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>)==FG_OK){</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nTrig<sp/>config<sp/>succeed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__capturecam_1ga3c0090ca5fa9fa481f1945cfd56b79b3" kindref="member">CaptureCAM_CL::stop</ref>(){</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Fg_stopAcquire(fg,<ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>)!=FG_OK){</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Stop<sp/>acquisition<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Fg_getLastErrorDescription(fg)&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FG_ERROR;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><ref refid="classCaptureCAM__CL_1ab33aa6f1a3c040f04500bad5cb06f7df" kindref="member">isopened</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FG_OK;</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__capturecam_1ga0de12aa713d189d122e945956ce18927" kindref="member">CaptureCAM_CL::close</ref>(){</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/>Fg_stopAcquire(fg,<ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>Fg_FreeMemEx(fg,<sp/>memHandle);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>Fg_FreeGrabber(fg);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><ref refid="classCaptureCAM__CL_1ab33aa6f1a3c040f04500bad5cb06f7df" kindref="member">isopened</ref>=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>free(serialRefPtr);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__capturecam_1ga0e323148cfd234d43a32918386d021d1" kindref="member">CaptureCAM_CL::grabFrame</ref>()</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_pic_nr<sp/>=<sp/>Fg_getLastPicNumberBlockingEx(fg,<sp/>last_pic_nr<sp/>+<sp/>1,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>,<sp/><ref refid="classCaptureCAM__CL_1ae7ac89be87ecb4da1ae3ca8dbf391f5b" kindref="member">timeout</ref>,<sp/>memHandle);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_pic_nr<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(Data,</highlight><highlight class="stringliteral">&quot;Fg_getLastPicNumberBlockingEx<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>Fg_getLastErrorDescription(fg));</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="group__capturecam_1ga3c0090ca5fa9fa481f1945cfd56b79b3" kindref="member">stop</ref>();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>string(Data);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>last_pic_nr<sp/>=<sp/>cur_pic_nr;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1ae7ac89be87ecb4da1ae3ca8dbf391f5b" kindref="member">timeout</ref>=4;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1a9ed9c3ca83e9a37ba035b63085d436f0" kindref="member">ImgPtr</ref><sp/>=<sp/>Fg_getImagePtrEx(fg,<sp/>last_pic_nr,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>,<sp/>memHandle);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>error){</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>error<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>sleep(5);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1ae7ac89be87ecb4da1ae3ca8dbf391f5b" kindref="member">timeout</ref>+=<sp/>100;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>last_pic_nr<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*f=<ref refid="classCaptureCAM__CL_1ae4cbea3bd517918aca81243658cfe0d9" kindref="member">file</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>boardNb<sp/>=<sp/><ref refid="classCaptureCAM__CL_1a389bd2abcf59cbbc09356897508eec7b" kindref="member">boardNr</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__capturecam_1ga16b6491e0fe8caae23d169dacc87589e" kindref="member">open</ref>(boardNb,f);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__capturecam_1ga41cc34667ccf43936c6e2fa2fa0df9f0" kindref="member">startAcquire</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__capturecam_1ga0e323148cfd234d43a32918386d021d1" kindref="member">grabFrame</ref>();</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__capturecam_1gad18ae6f1205062f91f2e113d5f93ea99" kindref="member">CaptureCAM_CL::resetCvImage</ref>()</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;resetCvImage&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//TODO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(<sp/>(int)image.width<sp/>!=<sp/>width<sp/>||<sp/>(int)image.height<sp/>!=<sp/>height<sp/>||<sp/>image.frm<sp/>!=<sp/>(XI_IMG_FORMAT)format)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>xiGetParamInt(<sp/>hmv,<sp/>XI_PRM_WIDTH,<sp/>&amp;width);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>xiGetParamInt(<sp/>hmv,<sp/>XI_PRM_HEIGHT,<sp/>&amp;height);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>xiGetParamInt(<sp/>hmv,<sp/>XI_PRM_IMAGE_DATA_FORMAT,<sp/>&amp;format);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__capturecam_1gaaeae6486152d120aba8122ac7957045f" kindref="member">CaptureCAM_CL::getProperty</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>property_id<sp/>)</highlight></codeline>
<codeline lineno="248"><highlight class="normal">{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>int<sp/>i;</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/><sp/><sp/><sp/>for<sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>95;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>char<sp/>*name<sp/>=<sp/>Fg_getParameterName(fg,<sp/>i);</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/>&quot;<sp/>Param<sp/>%d:<sp/>%s,<sp/>0x%x\n&quot;,<sp/>i,<sp/>name,<sp/>Fg_getParameterId(fg,<sp/>i));</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fg<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>FG_OK;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>property_id<sp/>)</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_PORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_PORT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_WIDTH,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_HEIGHT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_XOFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_XOFFSET,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_YOFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_YOFFSET,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_XSHIFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_XSHIFT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_TIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_TIMEOUT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_FRAMESPERSEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_FRAMESPERSEC,<sp/>&amp;val,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/>value<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>val;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_MAXFRAMESPERSEC<sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_MAXFRAMESPERSEC,<sp/>&amp;val,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/>value<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int)<sp/>val;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_FORMAT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_EXPOSURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_EXPOSURE,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_TRIGGERMODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_TRIGGERMODE,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_STROBEPULSEDELAY<sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_STROBEPULSEDELAY,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_GLOBAL_ACCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_GLOBAL_ACCESS,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_CAMSTATUS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_CAMSTATUS,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_REVNR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_REVNR,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_MAXHEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_MAXHEIGHT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_PIXELDEPTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_PIXELDEPTH,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_LINEALIGNMENT<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_LINEALIGNMENT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_TRANSFER_LEN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_TRANSFER_LEN,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_TWOCAMMODEL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_TWOCAMMODEL,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_HDSYNC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_HDSYNC,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_BOARD_INFORMATION<sp/><sp/><sp/>:<sp/>ret=<sp/>Fg_getParameter(<sp/>fg,<sp/>FG_BOARD_INFORMATION,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(ret)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_NOT_INIT:<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialization<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_INVALID_PARAMETER:<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>invalid<sp/>parameter<sp/>has<sp/>been<sp/>entered.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_VALUE_OUT_OF_RANGE<sp/>:<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Value<sp/>is<sp/>besides<sp/>valid<sp/>ranges.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value;</highlight></codeline>
<codeline lineno="295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__capturecam_1gaabeb52911d3a8c016bffd9ac1602c985" kindref="member">CaptureCAM_CL::setProperty</ref>(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>property_id,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value<sp/>)</highlight></codeline>
<codeline lineno="334"><highlight class="normal">{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mvret<sp/>=<sp/>FG_OK;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(property_id)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_PORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_PORT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref><sp/>=<sp/>value;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_WIDTH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_WIDTH,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/><ref refid="classCaptureCAM__CL_1ab4bfa7d4e0737be410f9a1bb2ee8a331" kindref="member">width</ref><sp/>=<sp/>value;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_HEIGHT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_HEIGHT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/><ref refid="classCaptureCAM__CL_1aa2c3b3b877b2be9060509eb74a746fbb" kindref="member">height</ref><sp/>=<sp/>value;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_XOFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_XOFFSET,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/><ref refid="classCaptureCAM__CL_1a2da5179b4ab5cea7cce3500426ddc5fa" kindref="member">xoffset</ref><sp/>=<sp/>value;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_YOFFSET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_YOFFSET,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/><ref refid="classCaptureCAM__CL_1a1eb4328834bde84f1837c6033012be0d" kindref="member">yoffset</ref><sp/>=<sp/>value;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_XSHIFT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_XSHIFT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_TIMEOUT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_TIMEOUT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/><ref refid="classCaptureCAM__CL_1ae7ac89be87ecb4da1ae3ca8dbf391f5b" kindref="member">timeout</ref><sp/>=<sp/>value;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_FRAMESPERSEC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>{</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val<sp/>=<sp/>double(value);<sp/>cout<sp/>&lt;&lt;<sp/>val<sp/>&lt;&lt;<sp/>endl;<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_FRAMESPERSEC,<sp/>&amp;val,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/><ref refid="classCaptureCAM__CL_1aac6834248bdede33c42d3ef3e3c7ae26" kindref="member">framespersec</ref><sp/>=<sp/>value;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_FORMAT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_FORMAT,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/><ref refid="classCaptureCAM__CL_1a266e2b3ba3adccc6df770467550949ee" kindref="member">format</ref><sp/>=<sp/>value;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_EXPOSURE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_EXPOSURE,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/><ref refid="classCaptureCAM__CL_1aec279de1b4bf987a509af1b7b8aa0780" kindref="member">exposure</ref><sp/>=<sp/>value;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_TRIGGERMODE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_TRIGGERMODE,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_STROBEPULSEDELAY<sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_STROBEPULSEDELAY,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_GLOBAL_ACCESS<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mvret<sp/>=<sp/>Fg_setParameter(<sp/>fg,<sp/>FG_GLOBAL_ACCESS,<sp/>&amp;value,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(mvret)</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_NOT_INIT:<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initialization<sp/>failed.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_INVALID_PARAMETER:<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;An<sp/>invalid<sp/>parameter<sp/>has<sp/>been<sp/>entered.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FG_VALUE_OUT_OF_RANGE<sp/>:<sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Value<sp/>is<sp/>besides<sp/>valid<sp/>ranges.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>endl;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="363"><highlight class="normal">}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__capturecam_1ga41cc34667ccf43936c6e2fa2fa0df9f0" kindref="member">CaptureCAM_CL::startAcquire</ref>(){</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>totalBufferSize<sp/>=<sp/><ref refid="classCaptureCAM__CL_1ab4bfa7d4e0737be410f9a1bb2ee8a331" kindref="member">width</ref><sp/>*<sp/><ref refid="classCaptureCAM__CL_1aa2c3b3b877b2be9060509eb74a746fbb" kindref="member">height</ref><sp/>*<sp/>samplePerPixel<sp/>*<sp/>bytePerSample<sp/>*<sp/>nbBuffers;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>memHandle<sp/>=<sp/>Fg_AllocMemEx(fg,<sp/>totalBufferSize,<sp/>nbBuffers);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memHandle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>in<sp/>Fg_AllocMemEx:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>Fg_getLastErrorDescription(fg));</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fg_FreeGrabber(fg);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mvret<sp/>=<sp/>FG_OK;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>mvret<sp/>=<sp/>Fg_setParameter(fg,<sp/>FG_WIDTH,<sp/>&amp;<ref refid="classCaptureCAM__CL_1ab4bfa7d4e0737be410f9a1bb2ee8a331" kindref="member">width</ref>,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>HandleResult(mvret,<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>while<sp/>setting<sp/>width&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>mvret<sp/>=<sp/>Fg_setParameter(fg,<sp/>FG_HEIGHT,<sp/>&amp;<ref refid="classCaptureCAM__CL_1aa2c3b3b877b2be9060509eb74a746fbb" kindref="member">height</ref>,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/>HandleResult(mvret,<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>while<sp/>setting<sp/>height&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1a266e2b3ba3adccc6df770467550949ee" kindref="member">format</ref><sp/>=<sp/>FG_GRAY;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/>mvret<sp/>=<sp/>Fg_setParameter(fg,<sp/><sp/>FG_FORMAT,<sp/>&amp;<ref refid="classCaptureCAM__CL_1a266e2b3ba3adccc6df770467550949ee" kindref="member">format</ref><sp/>,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>HandleResult(mvret,<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>while<sp/>setting<sp/>data<sp/>format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Fg_AcquireEx(fg,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>,<sp/>nrOfPicturesToGrab,<sp/>ACQ_STANDARD,<sp/>memHandle))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Fg_AcquireEx()<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>Fg_getLastErrorDescription(fg));</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Start<sp/>acquisition<sp/>failed:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>Fg_getLastErrorDescription(fg)<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fg_FreeMemEx(fg,<sp/>memHandle);</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Fg_FreeGrabber(fg);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FG_ERROR;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCaptureCAM__CL_1ab33aa6f1a3c040f04500bad5cb06f7df" kindref="member">isopened</ref>=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bitAlignment<sp/>=<sp/>FG_LEFT_ALIGNED;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(FG_BITALIGNMENT,<sp/></highlight><highlight class="stringliteral">&quot;FG_BITALIGNMENT&quot;</highlight><highlight class="normal">,<sp/>&amp;bitAlignment);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>CHECK(FG_TIMEOUT,<sp/></highlight><highlight class="stringliteral">&quot;FG_TIMEOUT&quot;</highlight><highlight class="normal">,<sp/>&amp;<ref refid="classCaptureCAM__CL_1ae7ac89be87ecb4da1ae3ca8dbf391f5b" kindref="member">timeout</ref>);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">&amp;<sp/>error){</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>error<sp/>&lt;&lt;endl;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__capturecam_1ga0de12aa713d189d122e945956ce18927" kindref="member">close</ref>();</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/>init();</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FG_ERROR;</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FG_OK;</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__capturecam_1gaf39e3c68b693bdf10637923ef51ff1a2" kindref="member">CaptureCAM_CL::restart</ref>(){</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>totalBufferSize<sp/>=<sp/><ref refid="classCaptureCAM__CL_1ab4bfa7d4e0737be410f9a1bb2ee8a331" kindref="member">width</ref><sp/>*<sp/><ref refid="classCaptureCAM__CL_1aa2c3b3b877b2be9060509eb74a746fbb" kindref="member">height</ref><sp/>*<sp/>samplePerPixel<sp/>*<sp/>bytePerSample<sp/>*<sp/>nbBuffers;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/>memHandle<sp/>=<sp/>Fg_AllocMemEx(fg,<sp/>totalBufferSize,<sp/>nbBuffers);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memHandle<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;error<sp/>in<sp/>Fg_AllocMemEx:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>Fg_getLastErrorDescription(fg));</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Fg_FreeGrabber(fg);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(EXIT_FAILURE);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((Fg_AcquireEx(fg,<sp/><ref refid="classCaptureCAM__CL_1a63023c34ba9c4cb2c8ab517b8190f641" kindref="member">camPort</ref>,<sp/>nrOfPicturesToGrab,<sp/>ACQ_STANDARD,<sp/>memHandle))<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Fg_AcquireEx()<sp/>failed:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>Fg_getLastErrorDescription(fg));</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/>Fg_FreeMemEx(fg,<sp/>memHandle);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/>Fg_FreeGrabber(fg);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FG_ERROR;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>serialInit(ComNr);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>FG_OK;</highlight></codeline>
<codeline lineno="434"><highlight class="normal">}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CaptureCAM_CL::errMsg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>errNum)</highlight></codeline>
<codeline lineno="437"><highlight class="normal">{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>WIN32<sp/>||<sp/>defined<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>buf[512]=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(<sp/>buf,<sp/></highlight><highlight class="stringliteral">&quot;%s<sp/>:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>msg,<sp/>errNum);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/>OutputDebugString(buf);</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/>msg<sp/>&lt;&lt;<sp/>errNum<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal">}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/essais/Code/crappy_/crappy/sources/Jai_lib/CameraLink.cpp"/>
  </compounddef>
</doxygen>
