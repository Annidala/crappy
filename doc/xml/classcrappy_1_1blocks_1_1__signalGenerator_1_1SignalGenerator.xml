<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator" kind="class" language="Python" prot="public">
    <compoundname>crappy::blocks::_signalGenerator::SignalGenerator</compoundname>
    <basecompoundref refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock" prot="public" virt="non-virtual">crappy.blocks._meta.MasterBlock</basecompoundref>
    <basecompoundref refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock" prot="public" virt="non-virtual">crappy.blocks._meta.MasterBlock</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a47bd8378935d846502e9f5456013ea85" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::path</definition>
        <argsstring></argsstring>
        <name>path</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="88" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a7b050959a92bd52f51ba089b394aae86" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::nb_step</definition>
        <argsstring></argsstring>
        <name>nb_step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="89" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1ac6dc19a9a9f8c3bc2c213870e5c3abcb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::send_freq</definition>
        <argsstring></argsstring>
        <name>send_freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="90" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1ae47232ef384883204cd55fc464b3b79b" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::repeat</definition>
        <argsstring></argsstring>
        <name>repeat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="91" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a0aab88822f875318f4b7fba560ecc72f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::labels</definition>
        <argsstring></argsstring>
        <name>labels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="92" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1adc518e05e861e5ef2e52431f71a21b83" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::step</definition>
        <argsstring></argsstring>
        <name>step</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="93" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a1e6924a1fc65ecf906a105da621dca0f" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::waveform</definition>
        <argsstring></argsstring>
        <name>waveform</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="108" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1aaa0e324005d1a09642ca5e95feaab7bf" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::time</definition>
        <argsstring></argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="110" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1aa5d064c07aaf5cd01731cd5c746e12bc" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::gain</definition>
        <argsstring></argsstring>
        <name>gain</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="112" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a796d063b740365e2841b2707eee9214e" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::cycles</definition>
        <argsstring></argsstring>
        <name>cycles</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="113" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="113" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a27d14573794a475b69bdbc80dea0fc72" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::phase</definition>
        <argsstring></argsstring>
        <name>phase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="114" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a99e38d8940402fb959ff3e3cbd68ce93" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::lower_limit</definition>
        <argsstring></argsstring>
        <name>lower_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="115" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1ab0a6fc133bac859a40dc22c544d423fb" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::upper_limit</definition>
        <argsstring></argsstring>
        <name>upper_limit</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="116" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a00a7a9400b6555c21d48ecdbc5bb5ef6" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::direction</definition>
        <argsstring></argsstring>
        <name>direction</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="118" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a78a17b93197d45fbf189d0c110a91ba8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::value</definition>
        <argsstring></argsstring>
        <name>value</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="119" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a11e220db7fe6102456718d350a8ee213" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::offset</definition>
        <argsstring></argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="120" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="120" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a9318cbd3185db99ab44858337a8fc8b8" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::amplitude</definition>
        <argsstring></argsstring>
        <name>amplitude</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="132" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a157aab4e67eb72005e5278722a9a6357" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::freq</definition>
        <argsstring></argsstring>
        <name>freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="134" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="134" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a14b7f9d7bf34b81ec1bf3a29069db40d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._signalGenerator.SignalGenerator::alpha</definition>
        <argsstring></argsstring>
        <name>alpha</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="312" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="312" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1aee9cbbbfb8952348a5cddea1e1fa3baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def crappy.blocks._signalGenerator.SignalGenerator.__init__</definition>
        <argsstring>(self, path=None, send_freq=800, repeat=False, labels=[&apos;t(s)&apos;, signal, cycle)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>path</type>
          <defname>path</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>send_freq</type>
          <defname>send_freq</defname>
          <defval>800</defval>
        </param>
        <param>
          <type>repeat</type>
          <defname>repeat</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>labels</type>
          <defname>labels</defname>
          <defval>[&apos;t(s)&apos;</defval>
        </param>
        <param>
          <type>signal</type>
          <defname>signal</defname>
        </param>
        <param>
          <type>cycle</type>
          <defname>cycle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Calculate a signal, based on the time (from t0). There is several configurations,
see the examples section for more details.

As t0 is used for evaluating the signal, multiple instances of this block will
be synchronised.

Parameters
----------
path : list of dict
    Each dict must contain parameters for one step. See Examples section below.
    Available parameters are :

    * waveform : {&apos;sinus&apos;,&apos;square&apos;,&apos;triangle&apos;,&apos;limit&apos;,&apos;hold&apos;}
Shape of your signal, for every step.
    * freq : int or float
Frequency of your signal.
    * time : int or float or None
Time before change of step, for every step. If None, means infinite.
    * cycles : int or float or None (default)
Number of cycles before change of step, for every step. If None, means infinite.
    * amplitude : int or float
Amplitude of your signal.
    * offset: int or float
Offset of your signal.
    * phase: int or float
Phase of your signal (in radians). If waveform=&apos;limit&apos;, phase will be
the direction of the signal (up or down).
    * lower_limit : [int or float,sting]
Only for &apos;limit&apos; mode. Define the lower limit as a value of the
labeled signal : [value,&apos;label&apos;]
    * upper_limit : [int or float,sting]
Only for &apos;limit&apos; mode. Define the upper limit as a value of the
labeled signal : [value,&apos;label&apos;]
send_freq : int or float , default = 800
    Loop frequency. Use this parameter to avoid over-use of processor and avoid
    filling the link too fast.
repeat : Boolean, default=False
    Set True is you want to repeat your sequence forever.
labels : list of strings, default =[&apos;t(s)&apos;,&apos;signal&apos;,&apos;cycle&apos;]
    Allows you to set the labels of output data.

Returns
-------
dict : OrderedDict


    time : float
Relative time to t0.
    signal : float
Generated signal. If waveform=&apos;limit&apos;, signal can be -1/0/1.
    cycle number : float
Number of the current cycle.

Examples
--------
SignalGenerator(path=[{&apos;waveform&apos;:&apos;hold&apos;,&apos;time&apos;:3},
{&apos;waveform&apos;:&apos;sinus&apos;,&apos;time&apos;:10,&apos;phase&apos;:0,&apos;amplitude&apos;:2,&apos;offset&apos;:0.5,&apos;freq&apos;:2.5},
{&apos;waveform&apos;:&apos;triangle&apos;,&apos;time&apos;:10,&apos;phase&apos;:np.pi,&apos;amplitude&apos;:2,&apos;offset&apos;:0.5,&apos;freq&apos;:2.5},
{&apos;waveform&apos;:&apos;square&apos;,&apos;time&apos;:10,&apos;phase&apos;:0,&apos;amplitude&apos;:2,&apos;offset&apos;:0.5,&apos;freq&apos;:2.5}
{&apos;waveform&apos;:&apos;limit&apos;,&apos;cycles&apos;:3,&apos;phase&apos;:0,&apos;lower_limit&apos;:[-3,&apos;signal&apos;],&apos;upper_limit&apos;:[2,&apos;signal&apos;]}
{&quot;waveform&quot;:&quot;protection&quot;,&quot;gain&quot;:1,&quot;lower_limit&quot;:[-1,&apos;F2(N)&apos;],&quot;upper_limit&quot;:[1,&apos;F2(N)&apos;]}],
send_freq=400,repeat=True,labels=[&apos;t(s)&apos;,&apos;signal&apos;])

In this example we displayed every possibility or waveform.
Every dict contains informations for one step.
The requiered informations depend on the type of waveform you need.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="17" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="17" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a26957a87219c1a6527d826657df6c939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def crappy.blocks._signalGenerator.SignalGenerator.main</definition>
        <argsstring>(self)</argsstring>
        <name>main</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="95" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="95" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1aee9cbbbfb8952348a5cddea1e1fa3baf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def crappy.blocks._signalGenerator.SignalGenerator.__init__</definition>
        <argsstring>(self, path=None, send_freq=800, repeat=False, labels=[&apos;t(s)&apos;, signal, cycle)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>path</type>
          <defname>path</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>send_freq</type>
          <defname>send_freq</defname>
          <defval>800</defval>
        </param>
        <param>
          <type>repeat</type>
          <defname>repeat</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>labels</type>
          <defname>labels</defname>
          <defval>[&apos;t(s)&apos;</defval>
        </param>
        <param>
          <type>signal</type>
          <defname>signal</defname>
        </param>
        <param>
          <type>cycle</type>
          <defname>cycle</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Calculate a signal, based on the time (from t0). There is several configurations,
see the examples section for more details.

As t0 is used for evaluating the signal, multiple instances of this block will
be synchronised.

Parameters
----------
path : list of dict
    Each dict must contain parameters for one step. See Examples section below.
    Available parameters are :

    * waveform : {&apos;sinus&apos;,&apos;square&apos;,&apos;triangle&apos;,&apos;limit&apos;,&apos;hold&apos;}
Shape of your signal, for every step.
    * freq : int or float
Frequency of your signal.
    * time : int or float or None
Time before change of step, for every step. If None, means infinite.
    * cycles : int or float or None (default)
Number of cycles before change of step, for every step. If None, means infinite.
    * amplitude : int or float
Amplitude of your signal.
    * offset: int or float
Offset of your signal.
    * phase: int or float
Phase of your signal (in radians). If waveform=&apos;limit&apos;, phase will be
the direction of the signal (up or down).
    * lower_limit : [int or float,sting]
Only for &apos;limit&apos; mode. Define the lower limit as a value of the
labeled signal : [value,&apos;label&apos;]
    * upper_limit : [int or float,sting]
Only for &apos;limit&apos; mode. Define the upper limit as a value of the
labeled signal : [value,&apos;label&apos;]
send_freq : int or float , default = 800
    Loop frequency. Use this parameter to avoid over-use of processor and avoid
    filling the link too fast.
repeat : Boolean, default=False
    Set True is you want to repeat your sequence forever.
labels : list of strings, default =[&apos;t(s)&apos;,&apos;signal&apos;,&apos;cycle&apos;]
    Allows you to set the labels of output data.

Returns
-------
dict : OrderedDict


    time : float
Relative time to t0.
    signal : float
Generated signal. If waveform=&apos;limit&apos;, signal can be -1/0/1.
    cycle number : float
Number of the current cycle.

Examples
--------
SignalGenerator(path=[{&apos;waveform&apos;:&apos;hold&apos;,&apos;time&apos;:3},
{&apos;waveform&apos;:&apos;sinus&apos;,&apos;time&apos;:10,&apos;phase&apos;:0,&apos;amplitude&apos;:2,&apos;offset&apos;:0.5,&apos;freq&apos;:2.5},
{&apos;waveform&apos;:&apos;triangle&apos;,&apos;time&apos;:10,&apos;phase&apos;:np.pi,&apos;amplitude&apos;:2,&apos;offset&apos;:0.5,&apos;freq&apos;:2.5},
{&apos;waveform&apos;:&apos;square&apos;,&apos;time&apos;:10,&apos;phase&apos;:0,&apos;amplitude&apos;:2,&apos;offset&apos;:0.5,&apos;freq&apos;:2.5}
{&apos;waveform&apos;:&apos;limit&apos;,&apos;cycles&apos;:3,&apos;phase&apos;:0,&apos;lower_limit&apos;:[-3,&apos;signal&apos;],&apos;upper_limit&apos;:[2,&apos;signal&apos;]}
{&quot;waveform&quot;:&quot;protection&quot;,&quot;gain&quot;:1,&quot;lower_limit&quot;:[-1,&apos;F2(N)&apos;],&quot;upper_limit&quot;:[1,&apos;F2(N)&apos;]}],
send_freq=400,repeat=True,labels=[&apos;t(s)&apos;,&apos;signal&apos;])

In this example we displayed every possibility or waveform.
Every dict contains informations for one step.
The requiered informations depend on the type of waveform you need.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/crappy/blocks/_signalGenerator.py" line="17" column="1" bodyfile="/home/essais/Code/crappy_/crappy/crappy/blocks/_signalGenerator.py" bodystart="17" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a26957a87219c1a6527d826657df6c939" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def crappy.blocks._signalGenerator.SignalGenerator.main</definition>
        <argsstring>(self)</argsstring>
        <name>main</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/crappy/blocks/_signalGenerator.py" line="95" column="1" bodyfile="/home/essais/Code/crappy_/crappy/crappy/blocks/_signalGenerator.py" bodystart="95" bodyend="414"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Generate a signal.
</verbatim> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="519">
        <label>crappy.blocks._meta.MasterBlock</label>
        <link refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock"/>
        <childnode refid="520" relation="public-inheritance">
        </childnode>
        <childnode refid="520" relation="public-inheritance">
        </childnode>
      </node>
      <node id="520">
        <label>object</label>
      </node>
      <node id="518">
        <label>crappy.blocks._signalGenerator.SignalGenerator</label>
        <link refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator"/>
        <childnode refid="519" relation="public-inheritance">
        </childnode>
        <childnode refid="519" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="522">
        <label>crappy.blocks._meta.MasterBlock</label>
        <link refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock"/>
        <childnode refid="523" relation="public-inheritance">
        </childnode>
        <childnode refid="523" relation="public-inheritance">
        </childnode>
      </node>
      <node id="523">
        <label>object</label>
      </node>
      <node id="521">
        <label>crappy.blocks._signalGenerator.SignalGenerator</label>
        <link refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator"/>
        <childnode refid="522" relation="public-inheritance">
        </childnode>
        <childnode refid="522" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" line="12" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_signalGenerator.py" bodystart="12" bodyend="414"/>
    <listofallmembers>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1aee9cbbbfb8952348a5cddea1e1fa3baf" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>__init__</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1aee9cbbbfb8952348a5cddea1e1fa3baf" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>__init__</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a34cdcaba3da6e04e6de3b1cd763739f1" prot="public" virt="non-virtual" ambiguityscope="crappy::blocks::_meta::MasterBlock."><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>__init__</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1acba36c04ba28ab7afaa3048dd33af124" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>__new__</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1acba36c04ba28ab7afaa3048dd33af124" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>__new__</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1adcfe155ebfe9dae8914850e2b3e45a59" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>add_input</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1adcfe155ebfe9dae8914850e2b3e45a59" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>add_input</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1abe8955043d5743b108e24e3e1c992b36" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>add_output</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1abe8955043d5743b108e24e3e1c992b36" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>add_output</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a14b7f9d7bf34b81ec1bf3a29069db40d" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>alpha</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a9318cbd3185db99ab44858337a8fc8b8" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>amplitude</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a796d063b740365e2841b2707eee9214e" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>cycles</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a00a7a9400b6555c21d48ecdbc5bb5ef6" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>direction</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a157aab4e67eb72005e5278722a9a6357" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>freq</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1aa5d064c07aaf5cd01731cd5c746e12bc" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>gain</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a9a2b310d834f8e2bd38474b09b9c9bb9" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>inputs</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a3418c3d1dd49aa0f1051c2c62efed1b5" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>instances</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a0aab88822f875318f4b7fba560ecc72f" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>labels</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a99e38d8940402fb959ff3e3cbd68ce93" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>lower_limit</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a26957a87219c1a6527d826657df6c939" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>main</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a26957a87219c1a6527d826657df6c939" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>main</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a7b050959a92bd52f51ba089b394aae86" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>nb_step</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a11e220db7fe6102456718d350a8ee213" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>offset</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a06232d492fa6fd547d521575c8242da8" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>outputs</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a47bd8378935d846502e9f5456013ea85" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>path</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a27d14573794a475b69bdbc80dea0fc72" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>phase</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a67f6923f203781d0ecd9eff0a3bd4cc6" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>proc</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1ae47232ef384883204cd55fc464b3b79b" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>repeat</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1ac6dc19a9a9f8c3bc2c213870e5c3abcb" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>send_freq</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1ad3686aab64e86afd83a9eb4989192bc1" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>start</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1ad3686aab64e86afd83a9eb4989192bc1" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>start</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1adc518e05e861e5ef2e52431f71a21b83" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>step</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1ae1091eb7cbe7d9d341777f2436b0cef2" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>stop</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1ae1091eb7cbe7d9d341777f2436b0cef2" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>stop</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a3795b61c467b75b2351bd2df10e27cff" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>t0</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a66c2f4d93ccaaacae2d9d2061a730e80" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>t0</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a3795b61c467b75b2351bd2df10e27cff" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>t0</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a66c2f4d93ccaaacae2d9d2061a730e80" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>t0</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1aaa0e324005d1a09642ca5e95feaab7bf" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>time</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1ab0a6fc133bac859a40dc22c544d423fb" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>upper_limit</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a78a17b93197d45fbf189d0c110a91ba8" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>value</name></member>
      <member refid="classcrappy_1_1blocks_1_1__signalGenerator_1_1SignalGenerator_1a1e6924a1fc65ecf906a105da621dca0f" prot="public" virt="non-virtual"><scope>crappy::blocks::_signalGenerator::SignalGenerator</scope><name>waveform</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
