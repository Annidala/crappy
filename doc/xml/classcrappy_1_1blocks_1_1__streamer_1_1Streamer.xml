<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classcrappy_1_1blocks_1_1__streamer_1_1Streamer" kind="class" language="Python" prot="public">
    <compoundname>crappy::blocks::_streamer::Streamer</compoundname>
    <basecompoundref refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock" prot="public" virt="non-virtual">crappy.blocks._meta.MasterBlock</basecompoundref>
    <basecompoundref refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock" prot="public" virt="non-virtual">crappy.blocks._meta.MasterBlock</basecompoundref>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a762737e3ef388c21e307414c8954011d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._streamer.Streamer::labels</definition>
        <argsstring></argsstring>
        <name>labels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" line="32" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a87198ff91720d71f76332571bcd15439" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._streamer.Streamer::sensor</definition>
        <argsstring></argsstring>
        <name>sensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" line="33" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1afbe29497c5fec046b53f3409699149f4" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._streamer.Streamer::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" line="36" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a8d8b9a2b8c37df21217151cdf43b59a7" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._streamer.Streamer::freq</definition>
        <argsstring></argsstring>
        <name>freq</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" line="57" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a3abbc649d9c19a675ed43f36ce7521a9" prot="public" static="no" mutable="no">
        <type></type>
        <definition>crappy.blocks._streamer.Streamer::Labels</definition>
        <argsstring></argsstring>
        <name>Labels</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" line="70" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" bodystart="70" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a187f3d126b6d46c6b05b09280e70cccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def crappy.blocks._streamer.Streamer.__init__</definition>
        <argsstring>(self, sensor=None, labels=[&apos;t(s)&apos;, signal)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>sensor</type>
          <defname>sensor</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>labels</type>
          <defname>labels</defname>
          <defval>[&apos;t(s)&apos;</defval>
        </param>
        <param>
          <type>signal</type>
          <defname>signal</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Use it for testing and LabJack streaming.

Parameters
----------
sensor: None or LabJack sensor instance
    If None, will stream an incremented integer.
    If Labjack sensor instance, will stream the LabJack Values as definied at
    the instance creation. Be aware that if this block loops slowler than the
    LabJack streams, it will crash the LabJack when buffer is full.
    If scansPerRead !=1, you can directly link output data to a graph/save without
    going through a compacter.
labels : list of str, default = [&apos;t(s)&apos;,&apos;signal&apos;]
    Output labels.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" line="15" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" bodystart="15" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a8a3c3815d275df02f2401315318fccc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def crappy.blocks._streamer.Streamer.main</definition>
        <argsstring>(self)</argsstring>
        <name>main</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" line="35" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" bodystart="35" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a187f3d126b6d46c6b05b09280e70cccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def crappy.blocks._streamer.Streamer.__init__</definition>
        <argsstring>(self, sensor=None, labels=[&apos;t(s)&apos;, signal)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>sensor</type>
          <defname>sensor</defname>
          <defval>None</defval>
        </param>
        <param>
          <type>labels</type>
          <defname>labels</defname>
          <defval>[&apos;t(s)&apos;</defval>
        </param>
        <param>
          <type>signal</type>
          <defname>signal</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Use it for testing and LabJack streaming.

Parameters
----------
sensor: None or LabJack sensor instance
    If None, will stream an incremented integer.
    If Labjack sensor instance, will stream the LabJack Values as definied at
    the instance creation. Be aware that if this block loops slowler than the
    LabJack streams, it will crash the LabJack when buffer is full.
    If scansPerRead !=1, you can directly link output data to a graph/save without
    going through a compacter.
labels : list of str, default = [&apos;t(s)&apos;,&apos;signal&apos;]
    Output labels.
</verbatim> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/crappy/blocks/_streamer.py" line="15" column="1" bodyfile="/home/essais/Code/crappy_/crappy/crappy/blocks/_streamer.py" bodystart="15" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a8a3c3815d275df02f2401315318fccc3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def crappy.blocks._streamer.Streamer.main</definition>
        <argsstring>(self)</argsstring>
        <name>main</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/essais/Code/crappy_/crappy/crappy/blocks/_streamer.py" line="35" column="1" bodyfile="/home/essais/Code/crappy_/crappy/crappy/blocks/_streamer.py" bodystart="35" bodyend="83"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Send a stream of data.
</verbatim> </para>    </detaileddescription>
    <inheritancegraph>
      <node id="524">
        <label>crappy.blocks._streamer.Streamer</label>
        <link refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer"/>
        <childnode refid="525" relation="public-inheritance">
        </childnode>
        <childnode refid="525" relation="public-inheritance">
        </childnode>
      </node>
      <node id="525">
        <label>crappy.blocks._meta.MasterBlock</label>
        <link refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock"/>
        <childnode refid="526" relation="public-inheritance">
        </childnode>
        <childnode refid="526" relation="public-inheritance">
        </childnode>
      </node>
      <node id="526">
        <label>object</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="527">
        <label>crappy.blocks._streamer.Streamer</label>
        <link refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer"/>
        <childnode refid="528" relation="public-inheritance">
        </childnode>
        <childnode refid="528" relation="public-inheritance">
        </childnode>
      </node>
      <node id="528">
        <label>crappy.blocks._meta.MasterBlock</label>
        <link refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock"/>
        <childnode refid="529" relation="public-inheritance">
        </childnode>
        <childnode refid="529" relation="public-inheritance">
        </childnode>
      </node>
      <node id="529">
        <label>object</label>
      </node>
    </collaborationgraph>
    <location file="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" line="10" column="1" bodyfile="/home/essais/Code/crappy_/crappy/build/lib.linux-x86_64-2.7/crappy/blocks/_streamer.py" bodystart="10" bodyend="83"/>
    <listofallmembers>
      <member refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a187f3d126b6d46c6b05b09280e70cccb" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>__init__</name></member>
      <member refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a187f3d126b6d46c6b05b09280e70cccb" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>__init__</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a34cdcaba3da6e04e6de3b1cd763739f1" prot="public" virt="non-virtual" ambiguityscope="crappy::blocks::_meta::MasterBlock."><scope>crappy::blocks::_streamer::Streamer</scope><name>__init__</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1acba36c04ba28ab7afaa3048dd33af124" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>__new__</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1acba36c04ba28ab7afaa3048dd33af124" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>__new__</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1adcfe155ebfe9dae8914850e2b3e45a59" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>add_input</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1adcfe155ebfe9dae8914850e2b3e45a59" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>add_input</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1abe8955043d5743b108e24e3e1c992b36" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>add_output</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1abe8955043d5743b108e24e3e1c992b36" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>add_output</name></member>
      <member refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a8d8b9a2b8c37df21217151cdf43b59a7" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>freq</name></member>
      <member refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1afbe29497c5fec046b53f3409699149f4" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>i</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a9a2b310d834f8e2bd38474b09b9c9bb9" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>inputs</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a3418c3d1dd49aa0f1051c2c62efed1b5" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>instances</name></member>
      <member refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a3abbc649d9c19a675ed43f36ce7521a9" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>Labels</name></member>
      <member refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a762737e3ef388c21e307414c8954011d" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>labels</name></member>
      <member refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a8a3c3815d275df02f2401315318fccc3" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>main</name></member>
      <member refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a8a3c3815d275df02f2401315318fccc3" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>main</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a06232d492fa6fd547d521575c8242da8" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>outputs</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a67f6923f203781d0ecd9eff0a3bd4cc6" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>proc</name></member>
      <member refid="classcrappy_1_1blocks_1_1__streamer_1_1Streamer_1a87198ff91720d71f76332571bcd15439" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>sensor</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1ad3686aab64e86afd83a9eb4989192bc1" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>start</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1ad3686aab64e86afd83a9eb4989192bc1" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>start</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1ae1091eb7cbe7d9d341777f2436b0cef2" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>stop</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1ae1091eb7cbe7d9d341777f2436b0cef2" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>stop</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a3795b61c467b75b2351bd2df10e27cff" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>t0</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a66c2f4d93ccaaacae2d9d2061a730e80" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>t0</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a3795b61c467b75b2351bd2df10e27cff" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>t0</name></member>
      <member refid="classcrappy_1_1blocks_1_1__meta_1_1MasterBlock_1a66c2f4d93ccaaacae2d9d2061a730e80" prot="public" virt="non-virtual"><scope>crappy::blocks::_streamer::Streamer</scope><name>t0</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
